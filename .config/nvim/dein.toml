[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
build = 'pip3 install --user pynvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#auto_complete_delay = 0
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'
on_i = 1

[[plugins]]
repo = 'Shougo/neco-syntax'
on_i = 1

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap <silent> <C-f> :Denite source<CR>
  nnoremap <silent> <C-f><C-f> :Denite file<CR>

  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q denite#do_map('quit')
    nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
  endfunction

  let s:denite_win_width = 0.85
  let s:denite_win_height = 0.7

  call denite#custom#option('default', {
    \ 'split': 'floating',
"    \ 'winwidth': float2nr(&columns * s:denite_win_width),
"    \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width)) / 2),
"    \ 'winheight': float2nr(&lines * s:denite_win_height),
"    \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height)) / 2),
    \ })
'''

[[plugins]]
repo = 'ncm2/float-preview.nvim'
hook_add = '''
  set completeopt-=preview
  let g:float_preview#docked = 0
'''

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  autocmd FileType html imap <buffer><expr><Tab> emmet#isExpandable() ? "\<Plug>(emmet-expand-abbr)" : "\<Tab>"
'''
on_ft = 'html'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
on_ft = 'rust'
build = 'bash install.sh'
hook_add = '''
  set hidden

  let g:LanguageClient_serverCommands = { 'rust': ['rustup', 'run', 'stable', 'rls'] }
  augroup LangugeClient_config
    autocmd!
    autocmd User LanguageClientStarted setlocal signcolumn=yes
    autocmd User LanguageClientStopped setlocal signcolumn=auto
  augroup END

  let g:LanguageClient_autoStart = 1

  nnoremap <C-q> :call LanguageClient_textDocument_hover()<CR>
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'

[[plugins]]
repo = 'flazz/vim-colorschemes'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  set noshowmode
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'
